name: Pruebas unitarias
on:
 push:
     branches:
         - 'testing_**'
jobs:
  pruebas:
    name: Pruebas
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    if: ${{ contains(github.event.head_commit.message, '(Azul)') && contains(github.ref,'integration') }}
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v3
    - name: Configuración de entorno de python
      uses: actions/setup-python@v4
      with:
          python-version: '3.9'
    - name: Instalación de librerías y dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Correr pruebas
      id: correr-pruebas
      run: |
        python -m unittest -v 
    - name:  Cubrimiento personalizado
      id: cubrimiento
      run: |
          coverage run -m unittest 
          coverage report -m
           
  automerge:
    needs: pruebas
    permissions: write-all
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    if: ${{ !endsWith(github.event.head_commit.message,'[release]')}}
    steps:
     - name: Mezcla ${{ github.ref }} -> develop
       uses: tukasz/direct-merge-action@master
       with:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         source-branch: ${{ github.ref }}
         target-branch: develop
         commit-message: "Se realiza merge de la ${{ github.ref }} en develop"
         
  prepare_release:
    needs: pruebas
    permissions: write-all
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    if: ${{ endsWith(github.event.head_commit.message,'[release]')}}
    steps:
     - name: Mezcla ${{ github.ref }} -> develop
       uses: tukasz/direct-merge-action@master
       with:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         source-branch: ${{ github.ref }}
         target-branch: develop
         commit-message: "Merge completo. Listo para liberar [release]"
         
             
  invoke_workflow:
    needs: prepare_release
    permissions: write-all
    if: ${{ endsWith(github.event.head_commit.message,'[release]')}}   
    uses: fanpay/git_actions/.github/workflows/release.yml@main
    with:
      release_version: release/1.0.1
         
